string re(plotnode *p)
{
    if(p->name == "IT")
        return "id";
    else if(p->name == "CT")
        return "ch";
    else if(p->name == "CCT")
        return "num";
    else if(p->name == "ST")
        return ST[p->num];
    else if(p->name == "KT")
        return KT[p->num];
    else return PT[p->num];
}

bool yufa(plotnode *p)
{
    string w,str;
    vector <string> syn(1,"#");
    syn.push_back("A");
    xx = syn.back();
    syn.pop_back();
    string c;
    w = re(p);
    for(int i=0;;i++)
    {
        cout << xx << " " << w << endl;
        if(xx != w)
            if(isVN(xx,vn))
            {
                str = tab[getVnPos(xx,vn)][getVtPos(w,vt)];
                for(int j=str.size()-1;;j--)
                    if(str[j] != '&'&&str[j] != '#'&&str[j] != '%'&&str[j] != '$')
                    {
                        cout << "666 " << str << endl;
                        cout << str[j] << endl;
                        c = str[j] + c;
                        if(j==0) break;
                    }
                    else if(str[j] == '&'&&c.size()>0)
                    {
                        cout << "in& " << c << endl;
                        syn.push_back(c);
                        c.clear();
                    }
                    else if(str[j] == '%'&&c.size()>0)
                    {
                        cout << "in% " << c << endl;
                        syn.push_back(c);
                        c.clear();
                        break;
                    }
                    else if(str[j] == '$')
                        break;
                for(int j=0;j<syn.size();j++)
                    cout << syn[j] << endl;
            }
            else return false;
        else p=p->next;
        xx = syn.back();
        syn.pop_back();
        if(p != NULL)
            w = re(p);
        else w = "#";
        if(xx == "#"&&w == "#") return true;

    }
}
int main()
{
    getN(&vn);
    getT(&vt);
    getpRules(&vn);
    getFirst(&vn);
    getFollow(&vn);
    vn.at(14).follow.push_back("int");
    vn.at(14).follow.push_back("void");
    vn.at(14).follow.push_back("char");
    vn.at(14).follow.push_back("float");
 //   tab[12][2] = "N%O&N&#";
    analysisTab();

    ifstream infile;
    string str;
    infile.open("test.txt");
    stringstream buffer;
    buffer << infile.rdbuf();
    str = buffer.str();
    cout << str << endl;

    str = str + "\n#";
    string token="";
    int state = 1;
    int state_before;
    int i = 0,j = 0;
    char ch;
    plotnode *p;
    scan s;
    s.tL.inilist("tL",0);
    s.tA.inilist("tA",0);
    while((ch = str[i]) != '#')
    {
        state_before = state;
        state = s.state_change(state,ch);
        if(state != 1)
            if(state)
                {token = token + ch;i++;}
            else
            {
                s.state_token(state_before,token);
                state = 1;
                token.clear();
            }
        else i++;
        if(ch == '\n'&&j++%2==0)
        {
            p = s.tL.head;
            for(int i=0;p!=NULL;p=p->next)
            {
                cout << "<" << p->name << " " << p->num << ">";
            }
            cout << endl;
            s.tL.clr();
            s.tL.inilist("tL",0);
        }
    }
    p = s.tA.head->next;



    for(int i=0;p!=NULL;p=p->next)
    {
        cout << "<" << p->name << " " << p->num << ">";
    }
    cout << endl;

    for(int i=0;i<vn.size();i++)
    {
        for(int j=0;j<vn.at(i).p.size();j++)
        {
            cout<<vn.at(i).p.at(j)<<endl;
        }
    }
    int  a=getVnPos("S",vn);
    int b=getVtPos("void",vt);
    cout<<a<<"   "<<b<<endl;
    string ss=getrulefirst(vn.at(5).p.at(0));
    cout<<ss<<endl;
    for(int i=0;i<vn.size();i++)
    {
        cout<<vn.at(i).symbol<<" :";
        for(int j=0;j<vn.at(i).first.size();j++)
        {
            cout<<vn.at(i).first.at(j)<<"  ";
        }
        cout<<endl;
    }
    int c=getSizerule(vn.at(14).p.at(1));
    cout<<c<<endl;
    string d=getV(2,vn.at(3).p.at(1));
    cout<<d<<endl;
    for(int i=0;i<vn.size();i++)
    {
        cout<<vn.at(i).symbol<<" :";
        for(int j=0;j<vn.at(i).follow.size();j++)
        {
            cout<<vn.at(i).follow.at(j)<<"  ";
        }
        cout<<endl;
    }
    cout<<getV(1,vn.at(5).p.at(1));
    cout << endl;
    for(int i=0;i<vn.size();i++)
    {
        cout << vn.at(i).symbol << " ";
    }
    cout << endl;
    for(int i=0;i<vt.size();i++)
    {
        cout << vt.at(i).vt << " ";
    }
    cout << endl;
    for(int i=0;i<vn.size();i++)
    {
        for(int j=0;j<vt.size()+1;j++)
            cout << right << setw(20) << tab.at(i).at(j) << " ";
        cout << endl;
    }cout << "666";
    p = s.tA.head->next;
    if(yufa(p)) cout << "true" << endl;
    else cout << "false" << endl;
    return 0;
}